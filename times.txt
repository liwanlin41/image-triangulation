Averages per call

6/23: pixDoubleInt 556ms; pixEnergyInt 550ms; pixLineInt 276ms; Pixel::intersectionArea 1.8ms which is the bulk of integration process

6/24: intersecting all four sides of pixel with a segment takes 600us but intersecting all pixels takes 120ms; just creating the segments for intersection takes only 12us for all pixels though
Significant speed increase: change segment intersection detection to avoid using Matrix class (which required dynamic allocation):
New averages pixDoubleInt 83ms, pixEnergyInt 82ms, pixLineInt 1.1ms; intersectionArea is something like 600us

6/26: added gridded area approximation, for some reason this is super slow? (~3s per call for grid size of 10x10)
ahhhh - Matrix was still used in Triangle::getSignedArea, removing gets double integral down to 800us

6/28: running some more tests: 50 ish triangles on 260x200 image runs in ~1ms per integration call, same number of triangles on 800x464 runs in 4ms per line integral and 7ms per area integral; speed of single integration call is independent of number of triangles, seems to depend on pixel resolution

6/29: apple.jpeg 41 iterations, colorized
GPU activities:   44.67%  56.2863s     78720  715.02us  583.04us  12.779ms  pixConstantLineInt(Pixel*, int, int, Point*, Point*, Point*, bool, double*)
                  42.92%  54.0837s     53760  1.0060ms  902.91us  2.7252ms  pixConstantDoubleInt(Pixel*, int, int, Triangle*, int, double*, ColorChannel)
                  10.56%  13.3052s     13440  989.97us  911.78us  1.6589ms  pixConstantEnergyInt(Pixel*, int, int, Triangle*, double*, int, double*)
flower.jpg 31 iterations, colorized
GPU activities:   45.02%  29.7278s     39804  746.86us  586.24us  10.350ms  pixConstantLineInt(Pixel*, int, int, Point*, Point*, Point*, bool, double*)
                  42.70%  28.1935s     27392  1.0293ms  868.25us  6.8069ms  pixConstantDoubleInt(Pixel*, int, int, Triangle*, int, double*, ColorChannel)
                  10.48%  6.92015s      6848  1.0105ms  915.04us  1.5629ms  pixConstantEnergyInt(Pixel*, int, int, Triangle*, double*, int, double*)
rose.jpg 12 iterations, 347 triangles
GPU activities:   44.36%  22.6960s     18044  1.2578ms  1.1159ms  3.3495ms  pixConstantDoubleInt(Pixel*, int, int, Triangle*, int, double*, ColorChannel)
                  43.21%  22.1060s     24984  884.81us  747.16us  2.1420ms  pixConstantLineInt(Pixel*, int, int, Point*, Point*, Point*, bool, double*)
                  10.90%  5.57581s      4511  1.2360ms  1.1241ms  1.7361ms  pixConstantEnergyInt(Pixel*, int, int, Triangle*, double*, int, double*)

